version: "3"
services:

  transmission:
    build:
      context: .
      dockerfile: Dockerfile-transmission
    image: "home/transmission:latest"
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    volumes:
      - "./transmission:/etc/transmission-daemon"
      - "/srv/downloads:/srv/downloads"
      - "/srv/torrents:/srv/torrents"
    restart: always
      
  minidlna:
    build:
      context: .
      dockerfile: Dockerfile-minidlna
    image: "home/minidlna:latest"
    network_mode: host
    volumes:
      - "./minidlna/minidlna.conf:/etc/minidlna.conf:ro"
      - "/srv/media:/media"
      - "./minidlna/db:/var/cache/minidlna"
      - "./minidlna/logs:/var/log/minidlna"
    restart: always

  victoria:
    image: "victoriametrics/victoria-metrics:v1.85.3"
    volumes:
      - "./victoria:/victoria-metrics-data"
    restart: always
    ports:
      - "8428:8428"
    command: ["-promscrape.config", "/victoria-metrics-data/prometheus.yml"]
  
  node_exporter:
    image: "quay.io/prometheus/node-exporter:v1.5.0"
    command:
      - '--path.rootfs=/host'
      - '--collector.systemd'
      - '--collector.sysctl'
      - '--collector.processes'
      - '--collector.cgroups'
    network_mode: host
    pid: host
    restart: always
    volumes:
      - "/:/host:ro,rslave"
    cap_add:
      - SYS_TIME

  nvidia_exporter:
    image: "utkuozdemir/nvidia_gpu_exporter:1.1.0"
    devices:
      - "/dev/nvidiactl:/dev/nvidiactl"
      - "/dev/nvidia0:/dev/nvidia0"
    volumes:
      - "/usr/lib/x86_64-linux-gnu/libnvidia-ml.so:/usr/lib/x86_64-linux-gnu/libnvidia-ml.so"
      - "/usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1:/usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1"
      - "/usr/bin/nvidia-smi:/usr/bin/nvidia-smi"
    network_mode: "host"
    restart: always

  postgresql:
    image: "postgres:15.2"
    environment:
      POSTGRES_PASSWORD: 123
    volumes:
      - "./postgres/data:/var/lib/postgresql/data"
      - "./postgres/init.sh:/docker-entrypoint-initdb.d/init.sh"
    restart: always

  grafana:
    image: "grafana/grafana-oss:9.4.7-ubuntu"
    volumes:
      - "./grafana/data:/var/lib/grafana"
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini:ro"
    user: "1000"
    restart: always

  filebrowser:
    image: "filebrowser/filebrowser:v2.23.0"
    volumes:
      - "/srv:/srv"
      - "./filebrowser:/opt/filebrowser"
    command:
      - "-c"
      - "/opt/filebrowser/.filebrowser.json"
      - "-d"
      - "/opt/filebrowser/database.db"
      - "--noauth"
      - "--port"
      - "80"
    restart: always
  
  nginx:
    image: "nginx:1.23.3"
    volumes:
      - "./nginx:/etc/nginx/conf.d"
    ports:
      - "80:80"
    restart: always

  fb2index:
    build:
      dockerfile: Dockerfile-fb2index
      context: .
    image: "home/fb2index:latest"
    ports:
      - "8000:8000"
    volumes:
      - "/srv:/srv:ro"
      - "./fb2index:/opt/fb2index"
    command: ["-db", "/opt/fb2index/db.sqlite", "-http", "0.0.0.0:8000", "-j", "16", "-r", "/srv/downloads/fb2.Flibusta.Net"]